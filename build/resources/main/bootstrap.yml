spring:
    application:
        name: auth-service
    cloud:
        config:
            uri: http://${REGISTER_HOST:localhost}:${REGISTER_PORT:8888}
            fail-fast: true
            username: ${REGISTER_ID:whoami}
            password: ${REGISTER_SECRECT:dyuglc8nza}
    main:
        allow-bean-definition-overriding: true

    storage: ${RESOURCE_STORAGE_LOCATION:/Volumes/Workspace/storage}
    datasource:
        url: jdbc:mysql://${LOCAL_DB_DOMAIN:localhost}:${MYSQL_PORT:3306}/${MYSQL_DB:whoami_db}?useSSL=${MYSQL_USE_SSL:true}
        username: ${MYSQL_USERNAME:sqluser}
        password: ${MYSQL_PASSWORD:jy4w0zi790}

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: none
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
                jdbc:
                  lob:
                    non_contextual_creation: true
uaa-service:
    uri:
        home: http://${REGISTER_HOST:localhost}:${HOME_SERVICES_HOST:8080}/uaa
        token: /oauth/token
    auth:
        client-id: ${AUTH_CLIENT_ID:whoami-client}
        client-secret: ${AUTH_CLIENT_SECRET:whoami-secret}

server:
# log server tomcat
    tomcat:
        accesslog:
            enabled: true
            suffix: .log
            prefix: tomcat_log
            file-date-format: .yyyy-MM-dd
            directory: 
            pattern: common
        basedir: ./logs/tomcat

logging:
    level:
        root: INFO
    #path file log
    path: ./logs
    file: ${LOG_FILE_NAME:auth-service}
oauth2:
    client-id: ${AUTH_CLIENT_ID:whoami-client}
    client-secret: ${AUTH_KEY_SECRET:"{noop}whoami-secret"}

google: 
    service_account_email : ${GMAIL_APP_EMAIL:whoami@csf-whoami-247515.iam.gserviceaccount.com}
    application_name : ${GMAIL_APP_NAME:Csf-whoami}
    folder_id : ${GMAIL_APP_FOLDER:1EgRGKPKPoPv1ic6OA-EL4kerOx5j7JxJ}
    service_account_key : ${GMAIL_SERVICE_KEY_FILE:Csf-whoami.p12}