pluginManagement {
	repositories {
		gradlePluginPortal()
	}
	resolutionStrategy {
		eachPlugin {
			if (requested.id.id == 'org.springframework.boot') {
				useModule("org.springframework.boot:spring-boot-gradle-plugin:${requested.version}")
			}
		}
	}
}
rootProject.name = 'csf'
// Implementation.
include ':csf-common',
		':csf-zuul',
		':csf-eureka',
		':csf-config-server',
		':csf-data',
		':csf-cdn',
		':csf-security',
		// Demo project - waiting.
		':csf-account',
		':csf-base',
		':csf-whoami'

project(':csf-common').projectDir = new File('../whoami/csf-common')
project(':csf-security').projectDir = new File('../whoami/csf-security')
project(':csf-base').projectDir = new File('../whoami/csf-base')
project(':csf-whoami').projectDir = new File('../whoami/csf-whoami')
